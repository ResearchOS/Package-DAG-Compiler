nodes = [
    "LoadFromFile(import_mocap_forceplates_from_c3d_file.import.mocapfpHelper)",
    "UnspecifiedVariable(import_mocap_forceplates_from_c3d_file.import.fpsUsed)",
    "DataObjectFilePath(import_mocap_forceplates_from_c3d_file.import.c3dFilePath)",
    "Process(import_mocap_forceplates_from_c3d_file.import)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.FPCoverThickness)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.COPFzThreshold)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.cardCorners)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.cardForces)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpCenter)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.cardMoments)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.cardFreeMoments)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.cardCOP)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpRefFrame)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpFrameRate)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpAmpSerialNum)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpPosition)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpType)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpSize)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpRotMatrix2Cardinal)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.compCOPFPLogical)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.cardMocapData)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.mocapFrameRate)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.mocapRefFrame)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.mocapRotMatrix2Cardinal)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.segMarkerNames)",
    "DynamicVariable(frame_range_no_nan.frame_range.mocapData)",
    "Process(frame_range_no_nan.frame_range)",
    "OutputVariable(frame_range_no_nan.frame_range.startFrame)",
    "OutputVariable(frame_range_no_nan.frame_range.endFrame)",
]

edges = [
    "LoadFromFile(import_mocap_forceplates_from_c3d_file.import.mocapfpHelper) -> Process(import_mocap_forceplates_from_c3d_file.import)",
    "UnspecifiedVariable(import_mocap_forceplates_from_c3d_file.import.fpsUsed) -> Process(import_mocap_forceplates_from_c3d_file.import)",
    "DataObjectFilePath(import_mocap_forceplates_from_c3d_file.import.c3dFilePath) -> Process(import_mocap_forceplates_from_c3d_file.import)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.FPCoverThickness)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.COPFzThreshold)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.cardCorners)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.cardForces)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpCenter)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.cardMoments)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.cardFreeMoments)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.cardCOP)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpRefFrame)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpFrameRate)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpAmpSerialNum)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpPosition)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpType)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpSize)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.fpRotMatrix2Cardinal)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.compCOPFPLogical)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.cardMocapData)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.mocapFrameRate)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.mocapRefFrame)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.mocapRotMatrix2Cardinal)",
    "Process(import_mocap_forceplates_from_c3d_file.import) -> OutputVariable(import_mocap_forceplates_from_c3d_file.import.segMarkerNames)",
    "OutputVariable(import_mocap_forceplates_from_c3d_file.import.cardMocapData) -> DynamicVariable(frame_range_no_nan.frame_range.mocapData)",
    "DynamicVariable(frame_range_no_nan.frame_range.mocapData) -> Process(frame_range_no_nan.frame_range)",
    "Process(frame_range_no_nan.frame_range) -> OutputVariable(frame_range_no_nan.frame_range.startFrame)",
    "Process(frame_range_no_nan.frame_range) -> OutputVariable(frame_range_no_nan.frame_range.endFrame)",
]
